name: Firebase Test Lab UI Tests

on:
  workflow_call:
    inputs:
      java-version:
        description: "Java version to use"
        required: true
        type: string
      firebase-project-id:
        description: "Firebase Project ID"
        required: true
        type: string
      test-apk-path:
        description: "Path to the test APK"
        required: true
        type: string
      app-apk-path:
        description: "Path to the app APK"
        required: true
        type: string
      device-model:
        description: "Device model to test on"
        required: true
        type: string
      device-version:
        description: "Device Android version to test on"
        required: true
        type: string
    secrets:
      FIREBASE_AUTH_KEY:
        required: true

jobs:
  run-tests:
    name: Run UI Tests on Firebase Test Lab
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ inputs.java-version }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android build outputs
        uses: actions/cache@v3
        with:
          path: |
            androidApp/build/outputs
            ~/.gradle/wrapper
          key: ${{ runner.os }}-android-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-

      - name: Build app and test APK
        run: |
          ./gradlew assembleDebug
          ./gradlew assembleAndroidTest

      - name: Authenticate with Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-key.json
        run: |
          echo "${{ secrets.FIREBASE_AUTH_KEY }}" | base64 --decode > firebase-key.json

      - name: Verify Firebase Authentication
        run: gcloud auth list

      - name: Verify project
        run: gcloud config list

      - name: Run Instrumentation Tests
        run: |
          gcloud auth activate-service-account --key-file=firebase-key.json
          gcloud --quiet config set project ${{ inputs.firebase-project-id }}
          gcloud firebase test android run \
            --type instrumentation \
            --app ${{ inputs.app-apk-path }} \
            --test ${{ inputs.test-apk-path }} \
            --device model=${{ inputs.device-model }},version=${{ inputs.device-version }},locale=en,orientation=portrait \
            --timeout 5m

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: firebase-test-results
          path: .
